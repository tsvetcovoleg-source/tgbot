<?php

function handle_message($text, $user_id, $chat_id, $config, $conn, $callback = null) {
    $text_lower = mb_strtolower(trim($text));

    // === –ú–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π ===
    $routes = [
        '/start' => 'handle_start_command',
        '–∏–≥—Ä—ã'   => 'handle_games_command',
        '/–∏–≥—Ä—ã'  => 'handle_games_command'
        // –î–æ–±–∞–≤–ª—è–π —Å—é–¥–∞ –¥—Ä—É–≥–∏–µ –∫–æ–º–∞–Ω–¥—ã
    ];

    if (isset($routes[$text_lower])) {
        return $routes[$text_lower]($chat_id, $user_id, $conn, $config);
    }

    // fallback –¥–ª—è –æ–±—ã—á–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
    return handle_free_text($text, $chat_id, $user_id, $conn, $config);
}

function handle_callback($data, $user_id, $chat_id, $config, $conn, $callback) {
    // === –ú–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏—è callback'–æ–≤ ===
    if ($data === 'show_games') {
        return handle_games_command($chat_id, $user_id, $conn, $config);
    }

    // –±—ã–ª–æ: if (str_starts_with($data, 'register_')) {
    if (strpos($data, 'register_') === 0) {
        return handle_register_button($data, $chat_id, $user_id, $conn, $config, $callback);
    }

    if (strpos($data, 'enter_team_') === 0) {
        return handle_enter_team_button($data, $chat_id, $user_id, $conn, $config, $callback);
    }


    // –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –¥—Ä—É–≥–∏–µ...
}


# --------------------- –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –ö–û–ú–ê–ù–î ----------------------

function handle_start_command($chat_id, $user_id, $conn, $config) {
    $message = "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ MindGames Bot! –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–≤–∏–∑ –∏–ª–∏ –∫–≤–µ—Å—Ç.";

    $keyboard = [
        'inline_keyboard' => [
            [
                ['text' => 'üìã –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –∏–≥—Ä', 'callback_data' => 'show_games']
            ]
        ]
    ];

    send_reply($chat_id, $message, $keyboard, $user_id, $conn);
    return null;
}

function handle_games_command($chat_id, $user_id, $conn, $config) {
    $stmt = $conn->query("
        SELECT id, game_number, game_date, start_time, location, price
        FROM games
        ORDER BY game_date ASC
    ");

    $games = $stmt->fetchAll(PDO::FETCH_ASSOC);

    if (!$games) {
        send_reply($chat_id, "–ü–æ–∫–∞ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∏–≥—Ä üò¢", null, $user_id, $conn);
        return null;
    }

    foreach ($games as $game) {
        $text = "üéÆ <b>{$game['game_number']}</b>\nüìÖ {$game['game_date']} –≤ {$game['start_time']}\nüìç {$game['location']}\nüí∞ {$game['price']}";
        $keyboard = [
            'inline_keyboard' => [
                [
                    ['text' => 'üì• –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –Ω–∞ –∏–≥—Ä—É', 'callback_data' => 'register_' . $game['id']]
                ]
            ]
        ];

        send_telegram($chat_id, $text, $keyboard);
        log_bot_message($user_id, $text, $conn);
    }

    return null;
}

function handle_register_button($data, $chat_id, $user_id, $conn, $config, $callback) {
    $game_id = (int) str_replace('register_', '', $data);

    // –ë–µ—Ä—ë–º –¥–∞–Ω–Ω—ã–µ –∏–≥—Ä—ã
    $stmt = $conn->prepare("
        SELECT game_number, game_date, start_time, location
        FROM games
        WHERE id = :id
        LIMIT 1
    ");
    $stmt->execute([':id' => $game_id]);
    $game = $stmt->fetch(PDO::FETCH_ASSOC);

    if ($game) {
        // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        $msg = "‚úÖ –í—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –Ω–∞ –∏–≥—Ä—É:\n\n" .
               "üéÆ <b>{$game['game_number']}</b>\n" .
               "üìÖ {$game['game_date']} –≤ {$game['start_time']}\n" .
               "üìç {$game['location']}";

        // –ò–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∞ "–í–≤–µ—Å—Ç–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã"
        $keyboard = [
            'inline_keyboard' => [
                [
                    ['text' => 'üìù –í–≤–µ—Å—Ç–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã', 'callback_data' => 'enter_team_' . $game_id]
                ]
            ]
        ];

    } else {
        // –ï—Å–ª–∏ –∏–≥—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, —É–¥–∞–ª–∏–ª–∏ –∏–∑ –ë–î)
        $msg = "‚ùå –ò–≥—Ä–∞ —Å ID $game_id –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.";
        $keyboard = null;
    }

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    @file_get_contents($config['api_url'] . "sendMessage?" . http_build_query([
        'chat_id'    => $chat_id,
        'text'       => $msg,
        'parse_mode' => 'HTML',
        'reply_markup' => $keyboard ? json_encode($keyboard, JSON_UNESCAPED_UNICODE) : null
    ]));

    // –õ–æ–≥–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç –±–æ—Ç–∞
    log_bot_message($user_id, strip_tags($msg), $conn);
}

function handle_enter_team_button($data, $chat_id, $user_id, $conn, $config, $callback) {
    // –ü–æ–ª—É—á–∞–µ–º game_id –∏–∑ callback_data: enter_team_{id}
    $game_id = (int) str_replace('enter_team_', '', $data);

    // –°–æ–∑–¥–∞—ë–º –Ω–æ–≤—É—é —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é: —Ç–æ–ª—å–∫–æ user_id, game_id, created_at
    $stmt = $conn->prepare("
        INSERT INTO registrations (user_id, game_id, created_at)
        VALUES (:uid, :gid, NOW())
    ");
    $stmt->execute([
        ':uid' => $user_id,
        ':gid' => $game_id
    ]);

    // –°–æ–æ–±—â–µ–Ω–∏–µ-–ø–æ–¥—Å–∫–∞–∑–∫–∞
    $text = "üìù –í –æ—Ç–≤–µ—Ç–µ –Ω–∞ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤–≤–µ–¥–∏—Ç–µ <b>–Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∞—à–µ–π –∫–æ–º–∞–Ω–¥—ã</b>.";

    // –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –∫–∞–∫ ¬´–æ—Ç–≤–µ—Ç¬ª –∫ —Å–æ–æ–±—â–µ–Ω–∏—é —Å –∫–Ω–æ–ø–∫–æ–π (–µ—Å–ª–∏ –µ—Å—Ç—å message_id)
    $params = [
        'chat_id'    => $chat_id,
        'text'       => $text,
        'parse_mode' => 'HTML'
    ];
    if (isset($callback['message']['message_id'])) {
        $params['reply_to_message_id'] = $callback['message']['message_id'];
    }

    @file_get_contents($config['api_url'] . "sendMessage?" . http_build_query($params));

    // –õ–æ–≥–∏—Ä—É–µ–º –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—É—é –ø–æ–¥—Å–∫–∞–∑–∫—É
    log_bot_message($user_id, strip_tags($text), $conn);
}



function handle_free_text($text, $chat_id, $user_id, $conn, $config) {
    $teamName = trim($text);

    // –ò—â–µ–º —Å–∞–º—É—é —Å–≤–µ–∂—É—é —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –±–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã
    $stmt = $conn->prepare("
        SELECT id
        FROM registrations
        WHERE user_id = :uid AND (team IS NULL OR team = '')
        ORDER BY id DESC
        LIMIT 1
    ");
    $stmt->execute([':uid' => $user_id]);
    $reg_id = $stmt->fetchColumn();

    if ($reg_id) {
        // –û–±–Ω–æ–≤–ª—è–µ–º team —Ç–µ–º, —á—Ç–æ –ø—Ä–∏—Å–ª–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        $stmtUp = $conn->prepare("UPDATE registrations SET team = :team WHERE id = :rid");
        $stmtUp->execute([
            ':team' => $teamName,
            ':rid'  => $reg_id
        ]);

        $confirm = "‚úÖ –ö–æ–º–∞–Ω–¥–∞ ¬´".htmlspecialchars($teamName, ENT_QUOTES | ENT_SUBSTITUTE, 'UTF-8')."¬ª —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞.";
        @file_get_contents($config['api_url'] . "sendMessage?" . http_build_query([
            'chat_id'    => $chat_id,
            'text'       => $confirm,
            'parse_mode' => 'HTML'
        ]));

        log_bot_message($user_id, strip_tags($confirm), $conn);
        return null;
    }

    // Fallback ‚Äî –µ—Å–ª–∏ –Ω–µ–∑–∞–≤–µ—Ä—à—ë–Ω–Ω—ã—Ö —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–π –Ω–µ—Ç
    return "–°–ø–∞—Å–∏–±–æ –∑–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ! –ù–∞–ø–∏—à–∏—Ç–µ /–∏–≥—Ä—ã, —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –±–ª–∏–∂–∞–π—à–∏–µ —Å–æ–±—ã—Ç–∏—è.";
}


# --------------------- –£–¢–ò–õ–ò–¢–´ ----------------------

function send_reply($chat_id, $text, $keyboard, $user_id, $conn) {
    send_telegram($chat_id, $text, $keyboard);
    log_bot_message($user_id, $text, $conn);
}

function send_telegram($chat_id, $text, $keyboard = null) {
    global $config;

    $params = [
        'chat_id' => $chat_id,
        'text'    => $text
    ];

    if ($keyboard) {
        $params['reply_markup'] = json_encode($keyboard);
    }

    file_get_contents($config['api_url'] . "sendMessage?" . http_build_query($params));
}

function log_bot_message($user_id, $text, $conn) {
    $stmt = $conn->prepare("
        INSERT INTO messages (user_id, message, from_bot)
        VALUES (:uid, :msg, 1)
    ");
    $stmt->execute([
        ':uid' => $user_id,
        ':msg' => $text
    ]);
}
